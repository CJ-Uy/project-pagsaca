generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "ERD.png"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model users {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  setups    setups[]
}

model setups {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  userId    String
  modules   modules[]
  owner     users     @relation(fields: [userId], references: [id])
}

model modules {
  id               String             @id @default(cuid())
  name             String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  setupId          String
  setup            setups             @relation(fields: [setupId], references: [id])
  soilMoistureData soilMoistureData[]
  voltage          voltageData[]
  waterLevel       waterLevelData[]
}

model voltageData {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  moduleId  String
  data      Float
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  module    modules  @relation(fields: [moduleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model waterLevelData {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  moduleId  String
  data      Int      @db.SmallInt
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  module    modules  @relation(fields: [moduleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model soilMoistureData {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  moduleId  String
  data      Int      @db.SmallInt
  modules   modules  @relation(fields: [moduleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
